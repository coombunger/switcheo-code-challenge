syntax = "proto3";

package crude.crude;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "crude/crude/params.proto";
import "crude/crude/resource.proto";

option go_package = "crude/x/crude/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/crude/crude/params";
  
  }
  
  // Queries a list of Show items.
  rpc Show (QueryShowRequest) returns (QueryShowResponse) {
    option (google.api.http).get = "/crude/crude/show/{id}";
  
  }
  
  // Queries a list of List items.
  rpc List (QueryListRequest) returns (QueryListResponse) {
    option (google.api.http).get = "/crude/crude/list/{name}/{value}";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

message QueryShowRequest {
  uint64 id = 1;
}

message QueryShowResponse {
  Resource resource = 1;
}

message QueryListRequest {
  string                                name       = 1;
  string                                value      = 2;
  cosmos.base.query.v1beta1.PageRequest pagination = 3;
}

message QueryListResponse {
  repeated Resource resources = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

